
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORELSEleftANDALSOleftNOTleftLESGRTLEQGEQEQUALEQUALLESORGRTrightCONSleftINleftPLUSMINUSleftTIMESDIVIDEMODDIVrightUMINUSrightPOWERnonassocLBRACKETRBRACKETleftHASHTAGnonassocLPARENRPARENANDALSO BOOLEAN COMMA CONS DIV DIVIDE ELSE EQUAL EQUALEQUAL FUN GEQ GRT HASHTAG ID IF IN INTEGER LBRACKET LCURLY LEQ LES LESORGRT LPAREN MINUS MOD NOT NUMBER ORELSE PLUS POWER PRINT RBRACKET RCURLY REAL RPAREN SEMICOLON STRING THEN TIMES WHILE\n    program : funcs block\n    \n    program : block\n    \n    funcs : funcs func\n          | func\n    \n    func : FUN ID LPAREN elements RPAREN EQUAL block expression SEMICOLON\n    elements : elements COMMA ID\n                | ID\n     block : LCURLY block RCURLY\n    \n     block : LCURLY statement_list RCURLY\n    \n     block : LCURLY RCURLY\n    \n     statement_list : statement_list statement\n    \n    statement_list : statement\n    statement : block\n                 | assignment SEMICOLON\n                 | print SEMICOLON\n                 | expression SEMICOLON\n                 | ifelse_statement\n                 | if_statement\n                 | while_statement\n    \n    while_statement : WHILE LPAREN expression RPAREN block\n    \n    ifelse_statement : if_statement ELSE block\n    \n    if_statement : IF LPAREN expression RPAREN block\n    assignment : ID EQUAL expression\n                  | expression LBRACKET expression RBRACKET EQUAL expression print : PRINT LPAREN expression RPARENexpression : LPAREN expression RPARENexpression : expression PLUS expression\n                      | expression MINUS expression\n                      | expression TIMES expression\n                      | expression DIVIDE expression\n                      | expression POWER expression\n                      | expression MOD expression\n                      | expression DIV expressionelements : elements COMMA expression\n                | expressiontuple : LPAREN elements RPAREN\n             | LPAREN RPARENindexing : HASHTAG expression LPAREN expression RPAREN\n                | HASHTAG expression expression list : LBRACKET elements RBRACKET\n            | LBRACKET RBRACKETindexing : expression LBRACKET expression RBRACKETexpression : expression IN expressionexpression : expression CONS expressionexpression : expression LES expression\n                      | expression GRT expression\n                      | expression LEQ expression\n                      | expression GEQ expression\n                      | expression EQUALEQUAL expression\n                      | expression LESORGRT expressionexpression :  expression ANDALSO expression\n                  | expression ORELSE expressionexpression : NOT expressionexpression : MINUS expression %prec UMINUSexpression : factor\n                  | indexingfactor : ID\n              | NUMBER\n              | BOOLEAN\n              | STRING\n              | tuple\n              | list'
    
_lr_action_items = {'LCURLY':([0,2,4,5,8,9,10,11,12,16,17,18,36,37,38,39,40,41,42,61,96,116,117,124,125,127,131,],[5,5,-4,5,-3,-13,-10,5,-12,-17,-18,-19,-8,-9,-11,-13,-14,-15,-16,5,-21,5,5,-22,-20,5,-5,]),'FUN':([0,2,4,8,131,],[6,6,-4,-3,-5,]),'$end':([1,3,7,10,36,37,],[0,-2,-1,-10,-8,-9,]),'RCURLY':([5,9,10,11,12,16,17,18,36,37,38,39,40,41,42,96,124,125,],[10,36,-10,37,-12,-17,-18,-19,-8,-9,-11,-13,-14,-15,-16,-21,-22,-20,]),'ID':([5,6,9,10,11,12,16,17,18,20,22,23,24,25,26,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,64,67,69,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,102,103,106,107,108,109,119,122,123,124,125,126,129,],[19,35,-13,-10,19,-12,-17,-18,-19,65,65,72,72,-55,-56,-58,-59,-60,-61,-62,72,-8,-9,-11,-13,-14,-15,-16,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-41,72,-37,-54,-57,-53,72,72,72,65,-27,-28,-29,-30,-31,-32,-33,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-21,-40,112,72,-26,-36,-39,65,72,65,-28,72,-42,-22,-20,-26,72,]),'PRINT':([5,9,10,11,12,16,17,18,36,37,38,39,40,41,42,96,124,125,],[21,-13,-10,21,-12,-17,-18,-19,-8,-9,-11,-13,-14,-15,-16,-21,-22,-20,]),'LPAREN':([5,9,10,11,12,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,64,67,69,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,102,103,106,107,108,109,119,122,123,124,125,126,129,],[22,-13,-10,22,-12,-17,-18,-19,22,67,22,22,22,-55,-56,74,75,-58,-59,-60,-61,-62,22,77,-8,-9,-11,-13,-14,-15,-16,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-41,22,-37,-54,-57,-53,22,22,107,22,-27,-28,-29,-30,-31,-32,-33,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-21,-40,22,22,-26,-36,-39,22,22,22,-28,22,-42,-22,-20,-26,22,]),'NOT':([5,9,10,11,12,16,17,18,20,22,23,24,25,26,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,64,67,69,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,102,103,106,107,108,109,119,122,123,124,125,126,129,],[24,-13,-10,24,-12,-17,-18,-19,24,24,24,24,-55,-56,-58,-59,-60,-61,-62,24,-8,-9,-11,-13,-14,-15,-16,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-41,24,-37,-54,-57,-53,24,24,24,24,-27,-28,-29,-30,-31,-32,-33,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-21,-40,24,24,-26,-36,-39,24,24,24,-28,24,-42,-22,-20,-26,24,]),'MINUS':([5,9,10,11,12,15,16,17,18,19,20,22,23,24,25,26,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,118,119,120,122,123,124,125,126,128,129,130,],[23,-13,-10,23,-12,45,-17,-18,-19,-57,23,23,23,23,-55,-56,-58,-59,-60,-61,-62,23,-8,-9,-11,-13,-14,-15,-16,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-41,-57,45,23,45,-37,-54,-57,45,23,23,108,23,45,-27,-28,-29,-30,-31,-32,-33,45,45,45,45,45,45,45,45,45,45,-21,45,-40,23,23,45,-26,-36,45,45,-39,23,23,23,-42,-57,45,45,45,-28,45,23,-42,-22,-20,-26,45,23,45,]),'IF':([5,9,10,11,12,16,17,18,36,37,38,39,40,41,42,96,124,125,],[27,-13,-10,27,-12,-17,-18,-19,-8,-9,-11,-13,-14,-15,-16,-21,-22,-20,]),'WHILE':([5,9,10,11,12,16,17,18,36,37,38,39,40,41,42,96,124,125,],[28,-13,-10,28,-12,-17,-18,-19,-8,-9,-11,-13,-14,-15,-16,-21,-22,-20,]),'NUMBER':([5,9,10,11,12,16,17,18,20,22,23,24,25,26,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,64,67,69,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,102,103,106,107,108,109,119,122,123,124,125,126,129,],[29,-13,-10,29,-12,-17,-18,-19,29,29,29,29,-55,-56,-58,-59,-60,-61,-62,29,-8,-9,-11,-13,-14,-15,-16,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-41,29,-37,-54,-57,-53,29,29,29,29,-27,-28,-29,-30,-31,-32,-33,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-21,-40,29,29,-26,-36,-39,29,29,29,-28,29,-42,-22,-20,-26,29,]),'BOOLEAN':([5,9,10,11,12,16,17,18,20,22,23,24,25,26,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,64,67,69,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,102,103,106,107,108,109,119,122,123,124,125,126,129,],[30,-13,-10,30,-12,-17,-18,-19,30,30,30,30,-55,-56,-58,-59,-60,-61,-62,30,-8,-9,-11,-13,-14,-15,-16,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-41,30,-37,-54,-57,-53,30,30,30,30,-27,-28,-29,-30,-31,-32,-33,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-21,-40,30,30,-26,-36,-39,30,30,30,-28,30,-42,-22,-20,-26,30,]),'STRING':([5,9,10,11,12,16,17,18,20,22,23,24,25,26,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,64,67,69,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,102,103,106,107,108,109,119,122,123,124,125,126,129,],[31,-13,-10,31,-12,-17,-18,-19,31,31,31,31,-55,-56,-58,-59,-60,-61,-62,31,-8,-9,-11,-13,-14,-15,-16,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-41,31,-37,-54,-57,-53,31,31,31,31,-27,-28,-29,-30,-31,-32,-33,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-21,-40,31,31,-26,-36,-39,31,31,31,-28,31,-42,-22,-20,-26,31,]),'HASHTAG':([5,9,10,11,12,16,17,18,20,22,23,24,25,26,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,64,67,69,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,102,103,106,107,108,109,119,122,123,124,125,126,129,],[34,-13,-10,34,-12,-17,-18,-19,34,34,34,34,-55,-56,-58,-59,-60,-61,-62,34,-8,-9,-11,-13,-14,-15,-16,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-41,34,-37,-54,-57,-53,34,34,34,34,-27,-28,-29,-30,-31,-32,-33,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-21,-40,34,34,-26,-36,-39,34,34,34,-28,34,-42,-22,-20,-26,34,]),'LBRACKET':([5,9,10,11,12,15,16,17,18,19,20,22,23,24,25,26,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,118,119,120,122,123,124,125,126,128,129,130,],[20,-13,-10,20,-12,43,-17,-18,-19,-57,20,20,20,20,-55,-56,-58,-59,-60,-61,-62,20,-8,-9,-11,-13,-14,-15,-16,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-41,-57,100,20,100,-37,100,-57,100,20,20,109,20,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-21,100,-40,20,20,100,-26,-36,100,100,-39,20,20,20,-42,-57,100,100,100,100,100,20,-42,-22,-20,-26,100,20,100,]),'ELSE':([10,17,36,37,124,],[-10,61,-8,-9,-22,]),'SEMICOLON':([13,14,15,19,25,26,29,30,31,32,33,64,69,71,72,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,102,103,106,111,115,119,123,126,128,130,],[40,41,42,-57,-55,-56,-58,-59,-60,-61,-62,-41,-37,-54,-57,-53,-27,-28,-29,-30,-31,-32,-33,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-23,-40,-26,-36,-39,-42,-25,-54,-42,-26,-24,131,]),'PLUS':([15,19,25,26,29,30,31,32,33,64,65,66,68,69,71,72,73,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,101,102,103,104,105,106,111,112,113,114,118,119,120,123,126,128,130,],[44,-57,-55,-56,-58,-59,-60,-61,-62,-41,-57,44,44,-37,-54,-57,44,44,44,-27,-28,-29,-30,-31,-32,-33,44,44,44,44,44,44,44,44,44,44,44,-40,44,-26,-36,44,44,-39,-42,-57,44,44,44,-28,44,-42,-26,44,44,]),'TIMES':([15,19,25,26,29,30,31,32,33,64,65,66,68,69,71,72,73,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,101,102,103,104,105,106,111,112,113,114,118,119,120,123,126,128,130,],[46,-57,-55,-56,-58,-59,-60,-61,-62,-41,-57,46,46,-37,-54,-57,46,46,46,46,46,-29,-30,-31,-32,-33,46,46,46,46,46,46,46,46,46,46,46,-40,46,-26,-36,46,46,-39,-42,-57,46,46,46,46,46,-42,-26,46,46,]),'DIVIDE':([15,19,25,26,29,30,31,32,33,64,65,66,68,69,71,72,73,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,101,102,103,104,105,106,111,112,113,114,118,119,120,123,126,128,130,],[47,-57,-55,-56,-58,-59,-60,-61,-62,-41,-57,47,47,-37,-54,-57,47,47,47,47,47,-29,-30,-31,-32,-33,47,47,47,47,47,47,47,47,47,47,47,-40,47,-26,-36,47,47,-39,-42,-57,47,47,47,47,47,-42,-26,47,47,]),'POWER':([15,19,25,26,29,30,31,32,33,64,65,66,68,69,71,72,73,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,101,102,103,104,105,106,111,112,113,114,118,119,120,123,126,128,130,],[48,-57,-55,-56,-58,-59,-60,-61,-62,-41,-57,48,48,-37,48,-57,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-40,48,-26,-36,48,48,-39,-42,-57,48,48,48,48,48,-42,-26,48,48,]),'MOD':([15,19,25,26,29,30,31,32,33,64,65,66,68,69,71,72,73,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,101,102,103,104,105,106,111,112,113,114,118,119,120,123,126,128,130,],[49,-57,-55,-56,-58,-59,-60,-61,-62,-41,-57,49,49,-37,-54,-57,49,49,49,49,49,-29,-30,-31,-32,-33,49,49,49,49,49,49,49,49,49,49,49,-40,49,-26,-36,49,49,-39,-42,-57,49,49,49,49,49,-42,-26,49,49,]),'DIV':([15,19,25,26,29,30,31,32,33,64,65,66,68,69,71,72,73,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,101,102,103,104,105,106,111,112,113,114,118,119,120,123,126,128,130,],[50,-57,-55,-56,-58,-59,-60,-61,-62,-41,-57,50,50,-37,-54,-57,50,50,50,50,50,-29,-30,-31,-32,-33,50,50,50,50,50,50,50,50,50,50,50,-40,50,-26,-36,50,50,-39,-42,-57,50,50,50,50,50,-42,-26,50,50,]),'IN':([15,19,25,26,29,30,31,32,33,64,65,66,68,69,71,72,73,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,101,102,103,104,105,106,111,112,113,114,118,119,120,123,126,128,130,],[51,-57,-55,-56,-58,-59,-60,-61,-62,-41,-57,51,51,-37,-54,-57,51,51,51,-27,-28,-29,-30,-31,-32,-33,-43,51,51,51,51,51,51,51,51,51,51,-40,51,-26,-36,51,51,-39,-42,-57,51,51,51,-28,51,-42,-26,51,51,]),'CONS':([15,19,25,26,29,30,31,32,33,64,65,66,68,69,71,72,73,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,101,102,103,104,105,106,111,112,113,114,118,119,120,123,126,128,130,],[52,-57,-55,-56,-58,-59,-60,-61,-62,-41,-57,52,52,-37,-54,-57,52,52,52,-27,-28,-29,-30,-31,-32,-33,-43,52,52,52,52,52,52,52,52,52,52,-40,52,-26,-36,52,52,-39,-42,-57,52,52,52,-28,52,-42,-26,52,52,]),'LES':([15,19,25,26,29,30,31,32,33,64,65,66,68,69,71,72,73,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,101,102,103,104,105,106,111,112,113,114,118,119,120,123,126,128,130,],[53,-57,-55,-56,-58,-59,-60,-61,-62,-41,-57,53,53,-37,-54,-57,53,53,53,-27,-28,-29,-30,-31,-32,-33,-43,-44,-45,-46,-47,-48,-49,-50,53,53,53,-40,53,-26,-36,53,53,-39,-42,-57,53,53,53,-28,53,-42,-26,53,53,]),'GRT':([15,19,25,26,29,30,31,32,33,64,65,66,68,69,71,72,73,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,101,102,103,104,105,106,111,112,113,114,118,119,120,123,126,128,130,],[54,-57,-55,-56,-58,-59,-60,-61,-62,-41,-57,54,54,-37,-54,-57,54,54,54,-27,-28,-29,-30,-31,-32,-33,-43,-44,-45,-46,-47,-48,-49,-50,54,54,54,-40,54,-26,-36,54,54,-39,-42,-57,54,54,54,-28,54,-42,-26,54,54,]),'LEQ':([15,19,25,26,29,30,31,32,33,64,65,66,68,69,71,72,73,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,101,102,103,104,105,106,111,112,113,114,118,119,120,123,126,128,130,],[55,-57,-55,-56,-58,-59,-60,-61,-62,-41,-57,55,55,-37,-54,-57,55,55,55,-27,-28,-29,-30,-31,-32,-33,-43,-44,-45,-46,-47,-48,-49,-50,55,55,55,-40,55,-26,-36,55,55,-39,-42,-57,55,55,55,-28,55,-42,-26,55,55,]),'GEQ':([15,19,25,26,29,30,31,32,33,64,65,66,68,69,71,72,73,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,101,102,103,104,105,106,111,112,113,114,118,119,120,123,126,128,130,],[56,-57,-55,-56,-58,-59,-60,-61,-62,-41,-57,56,56,-37,-54,-57,56,56,56,-27,-28,-29,-30,-31,-32,-33,-43,-44,-45,-46,-47,-48,-49,-50,56,56,56,-40,56,-26,-36,56,56,-39,-42,-57,56,56,56,-28,56,-42,-26,56,56,]),'EQUALEQUAL':([15,19,25,26,29,30,31,32,33,64,65,66,68,69,71,72,73,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,101,102,103,104,105,106,111,112,113,114,118,119,120,123,126,128,130,],[57,-57,-55,-56,-58,-59,-60,-61,-62,-41,-57,57,57,-37,-54,-57,57,57,57,-27,-28,-29,-30,-31,-32,-33,-43,-44,-45,-46,-47,-48,-49,-50,57,57,57,-40,57,-26,-36,57,57,-39,-42,-57,57,57,57,-28,57,-42,-26,57,57,]),'LESORGRT':([15,19,25,26,29,30,31,32,33,64,65,66,68,69,71,72,73,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,101,102,103,104,105,106,111,112,113,114,118,119,120,123,126,128,130,],[58,-57,-55,-56,-58,-59,-60,-61,-62,-41,-57,58,58,-37,-54,-57,58,58,58,-27,-28,-29,-30,-31,-32,-33,-43,-44,-45,-46,-47,-48,-49,-50,58,58,58,-40,58,-26,-36,58,58,-39,-42,-57,58,58,58,-28,58,-42,-26,58,58,]),'ANDALSO':([15,19,25,26,29,30,31,32,33,64,65,66,68,69,71,72,73,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,101,102,103,104,105,106,111,112,113,114,118,119,120,123,126,128,130,],[59,-57,-55,-56,-58,-59,-60,-61,-62,-41,-57,59,59,-37,-54,-57,-53,59,59,-27,-28,-29,-30,-31,-32,-33,-43,-44,-45,-46,-47,-48,-49,-50,-51,59,59,-40,59,-26,-36,59,59,-39,-42,-57,59,59,59,-28,59,-42,-26,59,59,]),'ORELSE':([15,19,25,26,29,30,31,32,33,64,65,66,68,69,71,72,73,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,101,102,103,104,105,106,111,112,113,114,118,119,120,123,126,128,130,],[60,-57,-55,-56,-58,-59,-60,-61,-62,-41,-57,60,60,-37,-54,-57,-53,60,60,-27,-28,-29,-30,-31,-32,-33,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,60,-40,60,-26,-36,60,60,-39,-42,-57,60,60,60,-28,60,-42,-26,60,60,]),'EQUAL':([19,111,121,],[62,122,127,]),'RBRACKET':([20,25,26,29,30,31,32,33,63,64,65,66,69,71,72,73,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,98,102,103,106,109,112,113,114,119,120,123,126,],[64,-55,-56,-58,-59,-60,-61,-62,98,-41,-7,-35,-37,-54,-57,-53,111,-27,-28,-29,-30,-31,-32,-33,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-40,-26,-36,-39,64,-6,-34,123,-54,123,-42,-26,]),'RPAREN':([22,25,26,29,30,31,32,33,64,65,66,68,69,70,71,72,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,98,101,102,103,104,105,106,107,110,112,113,118,119,123,126,],[69,-55,-56,-58,-59,-60,-61,-62,-41,-7,-35,102,-37,103,-54,-57,-53,-27,-28,-29,-30,-31,-32,-33,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-40,115,-26,-36,116,117,-39,69,121,-6,-34,126,-54,-42,-26,]),'COMMA':([25,26,29,30,31,32,33,63,64,65,66,68,69,70,71,72,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,98,102,103,106,110,112,113,118,119,120,123,126,],[-55,-56,-58,-59,-60,-61,-62,99,-41,-7,-35,-35,-37,99,-54,-57,-53,-27,-28,-29,-30,-31,-32,-33,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-40,-26,-36,-39,99,-6,-34,-35,-54,-35,-42,-26,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'funcs':([0,],[2,]),'block':([0,2,5,11,61,116,117,127,],[3,7,9,39,96,124,125,129,]),'func':([0,2,],[4,8,]),'statement_list':([5,],[11,]),'statement':([5,11,],[12,38,]),'assignment':([5,11,],[13,13,]),'print':([5,11,],[14,14,]),'expression':([5,11,20,22,23,24,34,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,67,74,75,76,77,99,100,107,108,109,122,129,],[15,15,66,68,71,73,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,101,104,105,106,66,113,114,118,119,120,128,130,]),'ifelse_statement':([5,11,],[16,16,]),'if_statement':([5,11,],[17,17,]),'while_statement':([5,11,],[18,18,]),'factor':([5,11,20,22,23,24,34,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,67,74,75,76,77,99,100,107,108,109,122,129,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'indexing':([5,11,20,22,23,24,34,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,67,74,75,76,77,99,100,107,108,109,122,129,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'tuple':([5,11,20,22,23,24,34,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,67,74,75,76,77,99,100,107,108,109,122,129,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'list':([5,11,20,22,23,24,34,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,67,74,75,76,77,99,100,107,108,109,122,129,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'elements':([20,22,77,107,109,],[63,70,110,70,63,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> funcs block','program',2,'p_program','sbml.py',604),
  ('program -> block','program',1,'p_program_block','sbml.py',610),
  ('funcs -> funcs func','funcs',2,'p_program_funcs','sbml.py',616),
  ('funcs -> func','funcs',1,'p_program_funcs','sbml.py',617),
  ('func -> FUN ID LPAREN elements RPAREN EQUAL block expression SEMICOLON','func',9,'p_function','sbml.py',632),
  ('elements -> elements COMMA ID','elements',3,'p_id_elements','sbml.py',640),
  ('elements -> ID','elements',1,'p_id_elements','sbml.py',641),
  ('block -> LCURLY block RCURLY','block',3,'p_block2','sbml.py',655),
  ('block -> LCURLY statement_list RCURLY','block',3,'p_block','sbml.py',663),
  ('block -> LCURLY RCURLY','block',2,'p_block_empty','sbml.py',670),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','sbml.py',677),
  ('statement_list -> statement','statement_list',1,'p_statement_list_val','sbml.py',684),
  ('statement -> block','statement',1,'p_statements','sbml.py',690),
  ('statement -> assignment SEMICOLON','statement',2,'p_statements','sbml.py',691),
  ('statement -> print SEMICOLON','statement',2,'p_statements','sbml.py',692),
  ('statement -> expression SEMICOLON','statement',2,'p_statements','sbml.py',693),
  ('statement -> ifelse_statement','statement',1,'p_statements','sbml.py',694),
  ('statement -> if_statement','statement',1,'p_statements','sbml.py',695),
  ('statement -> while_statement','statement',1,'p_statements','sbml.py',696),
  ('while_statement -> WHILE LPAREN expression RPAREN block','while_statement',5,'p_while','sbml.py',704),
  ('ifelse_statement -> if_statement ELSE block','ifelse_statement',3,'p_statement_ifelse','sbml.py',711),
  ('if_statement -> IF LPAREN expression RPAREN block','if_statement',5,'p_statement_if','sbml.py',720),
  ('assignment -> ID EQUAL expression','assignment',3,'p_statement_assignment','sbml.py',727),
  ('assignment -> expression LBRACKET expression RBRACKET EQUAL expression','assignment',6,'p_statement_assignment','sbml.py',728),
  ('print -> PRINT LPAREN expression RPAREN','print',4,'p_statement_print','sbml.py',740),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','sbml.py',746),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','sbml.py',752),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','sbml.py',753),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','sbml.py',754),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','sbml.py',755),
  ('expression -> expression POWER expression','expression',3,'p_expression_binop','sbml.py',756),
  ('expression -> expression MOD expression','expression',3,'p_expression_binop','sbml.py',757),
  ('expression -> expression DIV expression','expression',3,'p_expression_binop','sbml.py',758),
  ('elements -> elements COMMA expression','elements',3,'p_elements','sbml.py',767),
  ('elements -> expression','elements',1,'p_elements','sbml.py',768),
  ('tuple -> LPAREN elements RPAREN','tuple',3,'p_expression_tuple','sbml.py',781),
  ('tuple -> LPAREN RPAREN','tuple',2,'p_expression_tuple','sbml.py',782),
  ('indexing -> HASHTAG expression LPAREN expression RPAREN','indexing',5,'p_expression_tuple_index','sbml.py',791),
  ('indexing -> HASHTAG expression expression','indexing',3,'p_expression_tuple_index','sbml.py',792),
  ('list -> LBRACKET elements RBRACKET','list',3,'p_expression_list','sbml.py',807),
  ('list -> LBRACKET RBRACKET','list',2,'p_expression_list','sbml.py',808),
  ('indexing -> expression LBRACKET expression RBRACKET','indexing',4,'p_expression_list_index','sbml.py',819),
  ('expression -> expression IN expression','expression',3,'p_expression_in','sbml.py',827),
  ('expression -> expression CONS expression','expression',3,'p_expression_cons','sbml.py',833),
  ('expression -> expression LES expression','expression',3,'p_expression_comparison','sbml.py',839),
  ('expression -> expression GRT expression','expression',3,'p_expression_comparison','sbml.py',840),
  ('expression -> expression LEQ expression','expression',3,'p_expression_comparison','sbml.py',841),
  ('expression -> expression GEQ expression','expression',3,'p_expression_comparison','sbml.py',842),
  ('expression -> expression EQUALEQUAL expression','expression',3,'p_expression_comparison','sbml.py',843),
  ('expression -> expression LESORGRT expression','expression',3,'p_expression_comparison','sbml.py',844),
  ('expression -> expression ANDALSO expression','expression',3,'p_expression_bool_op','sbml.py',849),
  ('expression -> expression ORELSE expression','expression',3,'p_expression_bool_op','sbml.py',850),
  ('expression -> NOT expression','expression',2,'p_expression_not','sbml.py',855),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','sbml.py',860),
  ('expression -> factor','expression',1,'p_expression_factor','sbml.py',865),
  ('expression -> indexing','expression',1,'p_expression_factor','sbml.py',866),
  ('factor -> ID','factor',1,'p_factor','sbml.py',872),
  ('factor -> NUMBER','factor',1,'p_factor','sbml.py',873),
  ('factor -> BOOLEAN','factor',1,'p_factor','sbml.py',874),
  ('factor -> STRING','factor',1,'p_factor','sbml.py',875),
  ('factor -> tuple','factor',1,'p_factor','sbml.py',876),
  ('factor -> list','factor',1,'p_factor','sbml.py',877),
]
